# Introduction to HTML, CSS and javascript
without using frameworks
11 Mar 2025

Loh Siu Yin
Technology Consultant, Beyond Broadcast LLP
siuyin@beyondbroadcast.com


## Just HTML and the browser
Create this [index.html](https://github.com/siuyin/intro-html-css-js/blob/main/001/index.html) file:

.code 001/index.html

save it and open the file with a browser


## This is what I see on my browser
.image 001/img/hello.png

High resolution screens render the text in rather small font.

Also note the brower defaults to a serif font for body text.


## Let's introduce some styling to make the font san-serif
[index.html](https://github.com/siuyin/intro-html-css-js/blob/main/002/index.html):

.code -numbers 002/index.html

I added line 6 to link in an external stylesheet:
[main.css](https://github.com/siuyin/intro-html-css-js/blob/main/002/main.css)


## This is the stylesheet file
[main.css](https://github.com/siuyin/intro-html-css-js/blob/main/002/main.css):

.code -numbers 002/main.css
Semicolons are needed in a stylesheet file to separate styling entries.


## And the result on my browser
.image 002/img/hello.png


## Adding a header
[index.html](https://github.com/siuyin/intro-html-css-js/blob/main/003/index.html):

.code -numbers 003/index.html

Headers in HTML are `<h1>, <h2>, ...` .

I added a `<h1>` on line 10.


## Let's style paragraphs red
[main.css](https://github.com/siuyin/intro-html-css-js/blob/main/003/main.css):

.code -numbers 003/main.css

See lines 7 through 9. They style `<p>` elements red in color.


## The result on my browser
.image 003/img/hello.png


## Adding interaction with javascript
Let us add a clickable element within the `<html> / <body>` :

.code 004/index.html /dim-mode:/,/$/

thus:

.image 004/img/hello.png


## Add the javascript
[index.html](https://github.com/siuyin/intro-html-css-js/blob/main/004/index.html)

.code 004/index.html /script/,/\/script/


## Clicking on the checkbox
.image 004/img/clicked.png


## javascript click handler
.code -numbers 004/index.html /function dimModeHandler/,/dimModeHandler\(\)$/

lines 16 through 28 **define** the function.

line 29 is where the function is **called** and becomes active.


## Declaring a function
The function keyword declares a function. In this case it is
named dimModeHandler.

.code 004/index.html /function dimModeHandler/,/$/

An alternative way to declare a function in javascript is:

```
const dimModeHandler = () => { 
```

The above assigns an un-named function `() => { ... }` to the
constant name `dimModeHandler`. 


## Getting a DOM element
When you load a `html` file into a browser, it analyzes the file
and creates a model or representation of it in your computer's memory.

The line below gets an element identified with "dim-cb" (dim checkbox)
and assigns that element to the block-scoped constant `cb`.

.code 004/index.html /const cb/,/$/

Block-scoped means **cb** is only defined between the function's opening **{**
and closing **}** braces.


## querySelectorAll returns a list of elements
.code 004/index.html /const allPara/,/$/

`query` above refers to a **CSS** querySelector.

**querySelectorAll** in this case returns all **\<p\>** (paragraph) elements.


## addEventListener to the checkbox element
.code 004/index.html /cb.addEventListener/,/$/

The above line attaches an un-named function `() => { ... }` to the **cb**
element.

This function is called each time the **cb** checkbox is clicked.


## Adding and removing CSS classes
.code -numbers 004/index.html /cb.addEventListener/,/^ +}\)$/

On line 20, we check if the checkbox is **checked** or not.

If the checkbox is **checked**, we add the **dim** class to the **body**
and all **p** elements.

If not, we remove the **dim** class.


## dim class
[main.css](https://github.com/siuyin/intro-html-css-js/blob/main/004/main.css)


.code 004/main.css /class="dim"/,/dim class/